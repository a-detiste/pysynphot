This file contains an ongoing log of errors encountered by the
syn_pysyn tests.



IRAF errors [real calcspec/countrate difference]
-------------------------------------------------
  ---> renormalization+wavetab has non-overlap for calcspec 
but not for countrate

IRAF errors [mystery: errors occur in large runs, but not when  
             the case is run individually]
-------------------------------------------------------
IrafError: Error running IRAF task calcphot
IRAF task terminated abnormally
ERROR (502, "floating point invalid operation")

or 

IrafError: Error running IRAF task countrate
IRAF task terminated abnormally
ERROR (2, "Syntax error in expression")


Missing extinction laws: [#127; solution defined]
-----------------------
NotImplementedError: Sorry, gal2 is not yet implemented
  --> replaced all gal2 by gal1 or gal3
NotImplementedError: Sorry, gal3 is not yet implemented

Badly parsed obsmodes with numbers in them: [#125; solution not yet defined]
------------------------------------------
TypeError: cannot concatenate 'str' and 'float' objects
  --> This turns out to be a tough problem, given the current
  architecture, because by the time we know we're trying to construct
  a bandpass, the original command provided to the parser is long gone.

Obsmode not supported by graph table: [Known issue: pysyn stricter than syn]
------------------------------------
ValueError: Warning: unused keywords set(['f25mama'])
  Note: this identified an error in the ETC specification of the obsmode.

Test sw error [workaround found]:
--------------------------------------
ValueError: too many values to unpack
---> countrate allows 4 params to specify a wavetab; genwave does not,
so cannot use genwave to generate the matching wavetab for calcspec to
use.
   Workaround: in this case, save the wavetable that pysynphot used
   and feed it to the synphot task.

===> Wavelength table is not sorted [No workaround identified]:
    ------------------------------------------------------------------
     When this workaround is used, sometimes there is an extremely
     small difference between two wavelength elements (say,
     499.9999992343 and 500.0) which are distinguishable in the
     pysynphot double precision table, but which wash out into a
     duplicate wavelength entry (500,500) when it is written out in
     single precision and synphot reads it in.

     This does identify a pysynphot problem: those tables should be
     written out in double precision. But, the problem would still
     occur when synphot read it in. 

     This problem is observed when an extinction law is used. The
     computation of the wavelength table for the extinction produces
     the 499.99999x wavelength entry.

Syn/Pysyn produce arrays of different dimensions [no workaround found]
---------------------------------------------------------------------
ValueError('Array size mismatch')
--->This is tested for before we try to do the significance test.
If the arrays are not the same shape, this exception is raised.
