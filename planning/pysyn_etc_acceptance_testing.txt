Proposal & issues regarding applying the results of the commissioning process to the ETC

Goals:
---------
  - avoid repeating work
  - apply changes to either pysynphot or the ETC, but not both at the same time
  - provide unambiguous bookkeeping of software and tests



Proposed procedure:
------------------------------

*First iteration:*
   - branch the last public release of ETC 17.2
   - apply only the changes necessary to run pysynphot to this branch
   - tag the result
   - install the result on some machine (which?)
   - install pysynphot v0.5 on this machine 
   - temporarily disable SYNPHOT on this machine
   - run the ETC regression tests (with answers derived from the last public release of ETC 17.2)

   - generate the {etc_test_name: list of syn_pysyn test cases} mapping
   - use this mapping to apply the "accepted failure" results back to the etc tests
   - spotcheck these "accepted failures" 
   - scrutinize any remaining failures
   - modify pysynphot, re-install, & repeat as necessary

   - when complete (ie, all ETC tests either pass or the failures are deemed acceptable), 
          - generate a new set of regression test reference answers
          - merge any changes that were made to pysynphot back to the trunk of the pysynphot repository
          - apply the changes necessary to run pysynphot back to the trunk of the ETC repository (?)

*Subsequent iterations:*
- Every run of the regression tests for acceptance testing will be run with either
   - a release candidate of pysynphot and the most recent public release of the ETC, *or*
   - a release candidate of the ETC and the most recent release of pysynphot.

   where "release candidate" means "a new version on which we are running these tests in preparation for releasing the new version.

- Every accepted run of the regression tests produces a new set of reference answers to be used for the next run.



Concerns:
--------------
----- timing. How should/can this procedure interact with:
        - pysynphot v0.5 release
        - syn_pysyn commissioning work milestones
        - ongoing ETC development & release schedule
        - ongoing pysynphot development & release schedule

----- test names and revision numbers
        - a mapping needs to be created between the etc_regressiontest_name and the syn_pysyn_testcase_name.              - The syn_pysyn test cases were derived from the ETC regression tests, so one ETC testname points to many syn_pysyn testcase names
        - The syn_pysyn test cases do NOT include answers, and are not updated when approved. They are in the same repository as the pysynphot code, and their revision numbers track accordingly. The revision number is not part of the name.
        - Are revision numbers part of the ETC regression test name?
        
----- test modifications: Tests have been modified in response to identified bugs in synphot. How do we map these back? What should happen to the test names?
        - calcspec was dropped from the syn_pysyn tests because it has a bug. 
        - gal2/gal3 were replaced by gal1 because gal2/gal3 are not yet implemented in pysynphot. 
        - extinction implementation was changed; old laws are being replaced by new laws that will be read from files and have different names. The only law in both the old and the new sets will be gal3=mwavg. 
        - synphot has a bug that affects use of the Bruzual models in the IR. We plan to modify the relevant tests by replacing these models with others that don't have the characteristic that triggers the bug.

----- test subsets:
        - the instrument teams have identified representative subsets of the very large ETC-derived test sets, due to resource limitations. How should the corresponding subset of ETC tests interact with the full set?

----- acceptance criteria
        - we have defined acceptance criteria for scalar and array comparisons for the quantities produced by synphot. However, the ETC uses these quantities in various calculations, and its regression tests use the results of those calculations in its comparisons. Is it possible to propagate the syn_pysyn acceptance criteria forward and determine what the corresponding ETC acceptance criteria should be? Is it even worth trying to do this?
        - similarly, for the set of "accepted failures", is it worth trying to propagate the level of failure forward, so as to determine whether the discrepancy is within the expected level for these failed tests?
